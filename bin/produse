#!/usr/bin/env python

import configargparse
from ProDuSe import adapter_predict
from ProDuSe import configure_produse
from ProDuSe import collapse
from ProDuSe import trim
from ProDuSe import snv
from ProDuSe import bwa
from ProDuSe import ProdusePipeline

parser = configargparse.ArgParser()

subparsers = parser.add_subparsers()

parser_run_pipeline = subparsers.add_parser(
    "run_produse",
    parents=[ProdusePipeline.parser],
    add_help=False
    )
parser_run_pipeline.set_defaults(
    which="run_produse"
)
parser_configure_produse = subparsers.add_parser(
    "configure_produse",
    parents=[configure_produse.parser],
    add_help=False,
    usage=""
    )
parser_configure_produse.set_defaults(
    which="configure_produse"
    )


parser_trim = subparsers.add_parser(
    "trim",
    parents=[trim.parser],
    add_help=False
    )
parser_trim.set_defaults(
    which="trim"
    )


parser_align = subparsers.add_parser(
    "bwa",
    parents=[bwa.parser],
    add_help=False
    )
parser_align.set_defaults(
    which="bwa"
    )


parser_collapse = subparsers.add_parser(
    "collapse",
    parents=[collapse.parser],
    add_help=False
    )
parser_collapse.set_defaults(
    which="collapse"
    )

parser_variants = subparsers.add_parser(
    "snv",
    parents=[snv.parser],
    add_help=False
    )
parser_variants.set_defaults(
    which="snv"
    )

parser_barcode = subparsers.add_parser(
    "adapter_predict",
    parents=[adapter_predict.parser],
    add_help=False
    )
parser_barcode.set_defaults(
    which="adapter_predict"
    )

args = parser.parse_args()

if args.which == "adapter_predict":
    adapter_predict.main(args)

if args.which == "collapse":
    collapse.main(args)

if args.which == "snv":
    snv.main(args)

if args.which == "trim":
    trim.main(args)

if args.which == "configure_produse":
    configure_produse.main(args)

if args.which == "align":
    bwa.main(args)

if args.which == "run_produse":
    ProdusePipeline.main(args)
